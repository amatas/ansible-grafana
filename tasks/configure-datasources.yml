---

- name: Get all datasources configured
  uri:
    method: GET
    user: "{{ grafana_admin_user|quote }}"
    password: "{{ grafana_admin_password|quote }}"
    force_basic_auth: true
    body_format: json
    url: "http://localhost:{{ grafana_port }}/api/datasources"
  register: datasources_raw

- name: Set fact based on the datasources installed from the raw response
  set_fact:
    datasources_installed: "{{ datasources_raw.json }}"

- name: Set default list facts
  set_fact:
    datasources_list_to_install: []
    datasources_list_to_update: []
    datasources_installed_listnames: []

- name: Set fact based on the datasources installed from the json list
  set_fact:
    datasources_installed_listnames: "{{ datasources_installed_listnames | default([]) | union( [item.name] ) }}"
  with_items: "{{ datasources_installed }}"

- name: Set datasources fact to install
  set_fact:
    datasources_list_to_install: "{{ datasources_list_to_install | default([]) | union( [item.name] ) }}"
  when: not (item.name in datasources_installed_listnames)
  with_items: "{{ grafana_datasources }}"

- name: Set datasorces fact to update
  set_fact:
    datasources_list_to_update: "{{ datasources_list_to_update | default([]) | union( [item.name] ) }}"
  when: item.name in datasources_installed_listnames
  with_items: "{{ grafana_datasources }}"

- name: Set datasources fact to delete
  set_fact:
    datasources_list_to_delete: "{{ datasources_installed_listnames | difference(datasources_list_to_install | union(datasources_list_to_update)) }}"

- name: Create datasource
  uri:
    method: POST
    user: "{{ grafana_admin_user|quote }}"
    password: "{{ grafana_admin_password|quote }}"
    force_basic_auth: true
    body_format: json
    body: "{{ item | to_json }}"
    url: "http://localhost:{{ grafana_port }}/api/datasources"
  when: item.name in datasources_list_to_install
  with_items: "{{ grafana_datasources }}"

- name: Update datasource
  uri:
    method: PUT
    user: "{{ grafana_admin_user|quote }}"
    password: "{{ grafana_admin_password|quote }}"
    force_basic_auth: true
    body_format: json
    body: "{{ item | to_json }}"
    url: "http://localhost:{{ grafana_port }}/api/datasources/{{item.id}}"
  when: item.name in datasources_list_to_update
  with_items: "{{ datasources_installed }}"

- name: Delete datasource
  uri:
    method: DELETE
    user: "{{ grafana_admin_user|quote }}"
    password: "{{ grafana_admin_password|quote }}"
    force_basic_auth: true
    url: "http://localhost:{{ grafana_port }}/api/datasources/{{item.id}}"
  when: item.name in datasources_list_to_delete
  with_items: "{{ datasources_installed }}"
