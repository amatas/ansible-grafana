---

- name: Get all datasources configured
  uri:
    method: GET
    user: "{{ grafana_admin_user|quote }}"
    password: "{{ grafana_admin_password|quote }}"
    force_basic_auth: true
    body_format: json
    url: "http://localhost:{{ grafana_port }}/api/datasources"
  register: current_datasources_raw

- name: Set fact based on the datasources installed from the raw response
  set_fact:
    current_datasources: "{{ current_datasources_raw.json }}"

- name: Set default list facts
  set_fact:
    datasources_to_create: []
    datasources_to_update: []
    current_datasources_names: []

- name: Set fact based on the current datasources from the json list
  set_fact:
    current_datasources_names: "{{ current_datasources_names | union( [item.name] ) }}"
  with_items: "{{ current_datasources }}"

- name: Set fact based on the current datasources to create
  set_fact:
    datasources_to_create: "{{ datasources_to_create | union( [item.name] ) }}"
  when: not (item.name in current_datasources_names)
  with_items: "{{ grafana_datasources }}"

- name: Set fact based on the current datasources to update
  set_fact:
    datasources_to_update: "{{ datasources_to_update | union( [item.name] ) }}"
  when: item.name in current_datasources_names
  with_items: "{{ grafana_datasources }}"

- name: Set fact based on the current datasources to delete
  set_fact:
    datasources_to_delete: "{{ current_datasources_names | difference(datasources_to_create | union(datasources_to_update)) }}"

- name: Create datasources
  uri:
    method: POST
    user: "{{ grafana_admin_user|quote }}"
    password: "{{ grafana_admin_password|quote }}"
    force_basic_auth: true
    body_format: json
    body: "{{ item | to_json }}"
    url: "http://localhost:{{ grafana_port }}/api/datasources"
  when: item.name in datasources_to_create
  with_items: "{{ grafana_datasources }}"

- name: Update datasources
  uri:
    method: PUT
    user: "{{ grafana_admin_user|quote }}"
    password: "{{ grafana_admin_password|quote }}"
    force_basic_auth: true
    body_format: json
    body: "{{ item | to_json }}"
    url: "http://localhost:{{ grafana_port }}/api/datasources/{{item.id}}"
  when: item.name in datasources_to_update
  with_items: "{{ current_datasources }}"

- name: Delete datasources
  uri:
    method: DELETE
    user: "{{ grafana_admin_user|quote }}"
    password: "{{ grafana_admin_password|quote }}"
    force_basic_auth: true
    url: "http://localhost:{{ grafana_port }}/api/datasources/{{item.id}}"
  when: item.name in datasources_to_delete
  with_items: "{{ current_datasources }}"
